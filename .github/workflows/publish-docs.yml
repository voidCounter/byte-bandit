name: Test and Deploy Docs
on:
  push:
    branches:
      - '**'
    paths:
      - 'docs/**'
  pull_request:
    branches:
      - '**'
    paths:
      - 'docs/**'
jobs:
  test-docs:
    name: Test and Lint Docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Ensure `docs/` exists
        run: |
          if [ ! -d "docs" ]; then
            echo "::error::The 'docs/' folder is missing. This workflow requires documentation to be present."
            exit 1
          fi
      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install MkDocs and Dependencies
        working-directory: docs
        run: pip install -r requirements.txt
        # To check for broken links in the documentation
      - name: Install markdown-link-check
        run: npm install -g markdown-link-check
        # To check for typos in the documentation
      - name: Install codespell
        run: pip install codespell
      - name: Install markdownlint-cli
        run: npm install -g markdownlint-cli
      - name: Check Markdown Links
        working-directory: docs
        run: find . -name "*.md" | xargs markdown-link-check
      - name: Check for Typos
        run: codespell --ignore-words-list="nd" --skip="docs/site/*" -- *.md docs/**/*.md
      - name: Run Markdown Lint and Format Output
        run: |
          npx markdownlint-cli "docs/**/*.md" || true
          echo "::warning::Markdown linting completed with warnings."
      - name: Validate MkDocs Configuration
        working-directory: docs
        run: mkdocs build --strict
      - name: upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mkdocs-site
          path: docs/site

  deploy-docs:
    name: Deploy Docs to cloudflare
    needs: test-docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: mkdocs-site
          path: docs/site
      - name: Deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ./docs/site --project-name=oakcan-docs
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

